{"ast":null,"code":"'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n  let index = string.indexOf(substring);\n\n  if (index === -1) {\n    return string;\n  }\n\n  const substringLength = substring.length;\n  let endIndex = 0;\n  let returnValue = '';\n\n  do {\n    returnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n    endIndex = index + substringLength;\n    index = string.indexOf(substring, endIndex);\n  } while (index !== -1);\n\n  returnValue += string.substr(endIndex);\n  return returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n  let endIndex = 0;\n  let returnValue = '';\n\n  do {\n    const gotCR = string[index - 1] === '\\r';\n    returnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n    endIndex = index + 1;\n    index = string.indexOf('\\n', endIndex);\n  } while (index !== -1);\n\n  returnValue += string.substr(endIndex);\n  return returnValue;\n};\n\nmodule.exports = {\n  stringReplaceAll,\n  stringEncaseCRLFWithFirstIndex\n};","map":{"version":3,"names":["stringReplaceAll","string","substring","replacer","index","indexOf","substringLength","length","endIndex","returnValue","substr","stringEncaseCRLFWithFirstIndex","prefix","postfix","gotCR","module","exports"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@testing-library/jest-dom/node_modules/chalk/source/util.js"],"sourcesContent":["'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAG,CAACC,MAAD,EAASC,SAAT,EAAoBC,QAApB,KAAiC;EACzD,IAAIC,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAf,CAAZ;;EACA,IAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;IACjB,OAAOH,MAAP;EACA;;EAED,MAAMK,eAAe,GAAGJ,SAAS,CAACK,MAAlC;EACA,IAAIC,QAAQ,GAAG,CAAf;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,GAAG;IACFA,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,EAAwBJ,KAAK,GAAGI,QAAhC,IAA4CN,SAA5C,GAAwDC,QAAvE;IACAK,QAAQ,GAAGJ,KAAK,GAAGE,eAAnB;IACAF,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAeH,SAAf,EAA0BM,QAA1B,CAAR;EACA,CAJD,QAISJ,KAAK,KAAK,CAAC,CAJpB;;EAMAK,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,CAAf;EACA,OAAOC,WAAP;AACA,CAjBD;;AAmBA,MAAME,8BAA8B,GAAG,CAACV,MAAD,EAASW,MAAT,EAAiBC,OAAjB,EAA0BT,KAA1B,KAAoC;EAC1E,IAAII,QAAQ,GAAG,CAAf;EACA,IAAIC,WAAW,GAAG,EAAlB;;EACA,GAAG;IACF,MAAMK,KAAK,GAAGb,MAAM,CAACG,KAAK,GAAG,CAAT,CAAN,KAAsB,IAApC;IACAK,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,EAAwB,CAACM,KAAK,GAAGV,KAAK,GAAG,CAAX,GAAeA,KAArB,IAA8BI,QAAtD,IAAkEI,MAAlE,IAA4EE,KAAK,GAAG,MAAH,GAAY,IAA7F,IAAqGD,OAApH;IACAL,QAAQ,GAAGJ,KAAK,GAAG,CAAnB;IACAA,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAe,IAAf,EAAqBG,QAArB,CAAR;EACA,CALD,QAKSJ,KAAK,KAAK,CAAC,CALpB;;EAOAK,WAAW,IAAIR,MAAM,CAACS,MAAP,CAAcF,QAAd,CAAf;EACA,OAAOC,WAAP;AACA,CAZD;;AAcAM,MAAM,CAACC,OAAP,GAAiB;EAChBhB,gBADgB;EAEhBW;AAFgB,CAAjB"},"metadata":{},"sourceType":"script"}