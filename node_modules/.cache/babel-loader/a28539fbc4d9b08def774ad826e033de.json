{"ast":null,"code":"export default function makeCancellablePromise(promise) {\n  var isCancelled = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function () {\n      return !isCancelled && resolve.apply(void 0, arguments);\n    })[\"catch\"](function (error) {\n      return !isCancelled && reject(error);\n    });\n  });\n  return {\n    promise: wrappedPromise,\n    cancel: function cancel() {\n      isCancelled = true;\n    }\n  };\n}","map":{"version":3,"names":["makeCancellablePromise","promise","isCancelled","wrappedPromise","Promise","resolve","reject","then","apply","arguments","error","cancel"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/make-cancellable-promise/dist/esm/index.js"],"sourcesContent":["export default function makeCancellablePromise(promise) {\n  var isCancelled = false;\n  var wrappedPromise = new Promise(function (resolve, reject) {\n    promise.then(function () {\n      return !isCancelled && resolve.apply(void 0, arguments);\n    })[\"catch\"](function (error) {\n      return !isCancelled && reject(error);\n    });\n  });\n  return {\n    promise: wrappedPromise,\n    cancel: function cancel() {\n      isCancelled = true;\n    }\n  };\n}"],"mappings":"AAAA,eAAe,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;EACtD,IAAIC,WAAW,GAAG,KAAlB;EACA,IAAIC,cAAc,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC1DL,OAAO,CAACM,IAAR,CAAa,YAAY;MACvB,OAAO,CAACL,WAAD,IAAgBG,OAAO,CAACG,KAAR,CAAc,KAAK,CAAnB,EAAsBC,SAAtB,CAAvB;IACD,CAFD,EAEG,OAFH,EAEY,UAAUC,KAAV,EAAiB;MAC3B,OAAO,CAACR,WAAD,IAAgBI,MAAM,CAACI,KAAD,CAA7B;IACD,CAJD;EAKD,CANoB,CAArB;EAOA,OAAO;IACLT,OAAO,EAAEE,cADJ;IAELQ,MAAM,EAAE,SAASA,MAAT,GAAkB;MACxBT,WAAW,GAAG,IAAd;IACD;EAJI,CAAP;AAMD"},"metadata":{},"sourceType":"module"}