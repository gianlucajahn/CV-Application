{"ast":null,"code":"var uncurryThis = require('../internals/function-uncurry-this');\n\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar toString = require('../internals/to-string');\n\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\n\nvar createMethod = function createMethod(TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};","map":{"version":3,"names":["uncurryThis","require","requireObjectCoercible","toString","whitespaces","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","module","exports","start","end","trim"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/core-js/internals/string-trim.js"],"sourcesContent":["var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,oCAAD,CAAzB;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,uCAAD,CAApC;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,0BAAD,CAAzB;;AAEA,IAAII,OAAO,GAAGL,WAAW,CAAC,GAAGK,OAAJ,CAAzB;AACA,IAAIC,UAAU,GAAG,MAAMF,WAAN,GAAoB,GAArC;AACA,IAAIG,KAAK,GAAGC,MAAM,CAAC,MAAMF,UAAN,GAAmBA,UAAnB,GAAgC,GAAjC,CAAlB;AACA,IAAIG,KAAK,GAAGD,MAAM,CAACF,UAAU,GAAGA,UAAb,GAA0B,IAA3B,CAAlB,C,CAEA;;AACA,IAAII,YAAY,GAAG,SAAfA,YAAe,CAAUC,IAAV,EAAgB;EACjC,OAAO,UAAUC,KAAV,EAAiB;IACtB,IAAIC,MAAM,GAAGV,QAAQ,CAACD,sBAAsB,CAACU,KAAD,CAAvB,CAArB;IACA,IAAID,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGR,OAAO,CAACQ,MAAD,EAASN,KAAT,EAAgB,EAAhB,CAAhB;IACd,IAAII,IAAI,GAAG,CAAX,EAAcE,MAAM,GAAGR,OAAO,CAACQ,MAAD,EAASJ,KAAT,EAAgB,EAAhB,CAAhB;IACd,OAAOI,MAAP;EACD,CALD;AAMD,CAPD;;AASAC,MAAM,CAACC,OAAP,GAAiB;EACf;EACA;EACAC,KAAK,EAAEN,YAAY,CAAC,CAAD,CAHJ;EAIf;EACA;EACAO,GAAG,EAAEP,YAAY,CAAC,CAAD,CANF;EAOf;EACA;EACAQ,IAAI,EAAER,YAAY,CAAC,CAAD;AATH,CAAjB"},"metadata":{},"sourceType":"script"}