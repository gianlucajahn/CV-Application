{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gianluca\\\\Documents\\\\itWork\\\\Projects\\\\cvApps\\\\src\\\\App.js\";\nimport React from 'react';\nimport Form from './containers/form/form.js';\nimport Preview from './containers/preview/preview.js';\nimport styles from './App.module.css';\nimport uniqid from \"uniqid\";\nimport autofilledState from './utils/autofill.js';\nimport MobileToggle from './components/MobileToggle/MobileToggle.js';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // State for all of the user's personal and educational information\n      info: [{\n        name: \"firstName\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"lastName\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"address\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"website\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"email\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"phone\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"bio\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"universityName\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"universityDegree\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"universityDate\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"schoolName\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"schoolDegree\",\n        value: \"\",\n        id: uniqid()\n      }, {\n        name: \"schoolDate\",\n        value: \"\",\n        id: uniqid()\n      }],\n      // State Array to hold Objects resembling work experience of the user\n      experience: [{\n        isHovered: false,\n        id: uniqid(),\n        company: \"\",\n        position: \"\",\n        task: \"\",\n        start: \"\",\n        end: \"\"\n      }],\n      // A new Object that's getting added towards the experience state array on every click of the \"add\" button\n      newExperience: {\n        isHovered: false,\n        id: uniqid(),\n        company: \"\",\n        position: \"\",\n        task: \"\",\n        start: \"\",\n        end: \"\"\n      },\n      // State Array to hold Objects resembling skills of the user\n      skills: [{\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      }, {\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      }, {\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      }],\n      // A new Object that's getting added towards the skills state array on every click of the \"add\" button\n      newSkill: {\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      },\n      // Object to hold a boolean value, determining if the form (or the preview, if formIsOpen: false) is supposed to be rendered in mobile view.\n      mobile: {\n        formIsOpen: true\n      }\n    }; // Binding \"this\" to the 'App' Component for all of the component's functionality\n\n    this.addWork = this.addWork.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.handleMouse = this.handleMouse.bind(this);\n    this.handleWorkChange = this.handleWorkChange.bind(this);\n    this.handleMouseSkills = this.handleMouseSkills.bind(this);\n    this.addSkill = this.addSkill.bind(this);\n    this.removeSkill = this.removeSkill.bind(this);\n    this.handleSkillChange = this.handleSkillChange.bind(this);\n    this.handleInfoChange = this.handleInfoChange.bind(this);\n    this.autoFill = this.autoFill.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  } // Toggling between the \"form\" and \"preview\" in mobile view\n\n\n  handleToggle(e) {\n    let newMobileState = this.state.mobile;\n    newMobileState.formIsOpen = !newMobileState.formIsOpen;\n    this.setState({ ...this.state,\n      mobile: newMobileState\n    });\n  } // Adding a work object to the experience state array\n\n\n  addWork(e) {\n    e.preventDefault();\n    this.setState({\n      experience: [...this.state.experience, this.state.newExperience],\n      newExperience: { ...this.state.newExperience,\n        id: uniqid()\n      }\n    });\n  } // Adding a skill object to the skills state array\n\n\n  addSkill(e) {\n    e.preventDefault();\n    this.setState({\n      skills: [...this.state.skills, this.state.newSkill],\n      newSkill: { ...this.state.newSkill,\n        id: uniqid()\n      }\n    });\n  } // Removing a work object from the experience state array\n\n\n  removeWork(index) {\n    const list = [...this.state.experience];\n    list.splice(index, 1);\n    this.setState({ ...this.state,\n      experience: list\n    });\n  } // Removing a skill object from the skills state array\n\n\n  removeSkill(index) {\n    const list = [...this.state.skills];\n    list.splice(index, 1);\n    this.setState({ ...this.state,\n      skills: list\n    });\n  } // Recolouring SVGs (with the \"fill:\" property) on hover\n\n\n  handleMouse(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work.isHovered = !work.isHovered;\n        return work;\n      } else {\n        return work;\n      }\n    });\n    this.setState({ ...this.state,\n      experience: experience\n    });\n  } // Recolouring SVGs (with the \"fill:\" property) on hover\n\n\n  handleMouseSkills(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill.isHovered = !skill.isHovered;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n    this.setState({ ...this.state,\n      skills: skills\n    });\n  } // Handling edits for input fields that control the experience state\n\n\n  handleWorkChange(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work[e.target.name] = e.target.value;\n        return work;\n      } else {\n        return work;\n      }\n    });\n    this.setState({ ...this.state,\n      experience: experience\n    });\n  } // Handling edits for input fields that control the skills state\n\n\n  handleSkillChange(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill[e.target.name] = e.target.value;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n    this.setState({ ...this.state,\n      skills: skills\n    });\n  } // Handling edits for input fields that control info state\n\n\n  handleInfoChange(e) {\n    const newInfo = this.state.info.map((information, i) => {\n      if (information.name === e.target.name) {\n        information.value = e.target.value;\n        return information;\n      } else {\n        return information;\n      }\n    });\n    this.setState({ ...this.state,\n      info: newInfo\n    });\n  } // Changing values of all keys in the state that keep user data, automatically rendering an autofilled CV due to\n  // the fact that the CV takes key-value pairs from the state as values.\n\n\n  autoFill(e) {\n    this.setState({ ...this.state,\n      info: autofilledState.info,\n      experience: autofilledState.experience,\n      skills: autofilledState.skills\n    });\n  } // Save Preview CV in a PDF file\n\n\n  printDocument() {\n    const input = document.getElementById('preview');\n    html2canvas(input).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF();\n      pdf.addImage(imgData, 'JPEG', 0, 0); // pdf.output('dataurlnewwindow');\n\n      pdf.save(\"download.pdf\");\n    });\n  } // App's render function\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['body'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['App'],\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          state: this.state,\n          mobile: this.state.mobile,\n          autoFill: this.autoFill,\n          info: this.state.info,\n          experience: this.state.experience,\n          skills: this.state.skills,\n          addWork: this.addWork,\n          removeWork: this.removeWork,\n          handleMouse: this.handleMouse,\n          handleWorkChange: this.handleWorkChange,\n          handleMouseSkills: this.handleMouseSkills,\n          addSkill: this.addSkill,\n          removeSkill: this.removeSkill,\n          handleSkillChange: this.handleSkillChange,\n          handleInfoChange: this.handleInfoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Preview, {\n          mobile: this.state.mobile,\n          info: this.state.info,\n          experience: this.state.experience,\n          skills: this.state.skills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileToggle, {\n        handleToggle: this.handleToggle,\n        mobile: this.state.mobile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Form","Preview","styles","uniqid","autofilledState","MobileToggle","jsPDF","html2canvas","App","Component","constructor","props","state","info","name","value","id","experience","isHovered","company","position","task","start","end","newExperience","skills","skill","newSkill","mobile","formIsOpen","addWork","bind","removeWork","handleMouse","handleWorkChange","handleMouseSkills","addSkill","removeSkill","handleSkillChange","handleInfoChange","autoFill","handleToggle","e","newMobileState","setState","preventDefault","index","list","splice","findIndex","work","target","map","i","newInfo","information","printDocument","input","document","getElementById","then","canvas","imgData","toDataURL","pdf","addImage","save","render"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/src/App.js"],"sourcesContent":["import React from 'react';\nimport Form from './containers/form/form.js';\nimport Preview from './containers/preview/preview.js';\nimport styles from './App.module.css';\nimport uniqid from \"uniqid\";\nimport autofilledState from './utils/autofill.js';\nimport MobileToggle from './components/MobileToggle/MobileToggle.js';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      // State for all of the user's personal and educational information\n      info: [\n        {\n          name: \"firstName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"lastName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"address\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"website\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"email\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"phone\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"bio\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityDegree\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityDate\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolDegree\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolDate\",\n          value: \"\",\n          id: uniqid()\n        }\n      ],\n\n      // State Array to hold Objects resembling work experience of the user\n      experience: [\n        { \n          isHovered: false,\n          id: uniqid(),\n          company: \"\",\n          position: \"\",\n          task: \"\",\n          start: \"\",\n          end: \"\"\n        }\n      ],\n\n      // A new Object that's getting added towards the experience state array on every click of the \"add\" button\n      newExperience: { \n        isHovered: false,\n        id: uniqid(),\n        company: \"\",\n        position: \"\",\n        task: \"\",\n        start: \"\",\n        end: \"\"\n      },\n\n      // State Array to hold Objects resembling skills of the user\n      skills: [\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        },\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        },\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        }\n      ],\n\n      // A new Object that's getting added towards the skills state array on every click of the \"add\" button\n      newSkill: {\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      },\n\n      // Object to hold a boolean value, determining if the form (or the preview, if formIsOpen: false) is supposed to be rendered in mobile view.\n      mobile: {\n        formIsOpen: true\n      }\n    }\n\n    // Binding \"this\" to the 'App' Component for all of the component's functionality\n    this.addWork = this.addWork.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.handleMouse = this.handleMouse.bind(this);\n    this.handleWorkChange = this.handleWorkChange.bind(this);\n    this.handleMouseSkills = this.handleMouseSkills.bind(this);\n    this.addSkill = this.addSkill.bind(this);\n    this.removeSkill = this.removeSkill.bind(this);\n    this.handleSkillChange = this.handleSkillChange.bind(this);\n    this.handleInfoChange = this.handleInfoChange.bind(this);\n    this.autoFill = this.autoFill.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  // Toggling between the \"form\" and \"preview\" in mobile view\n  handleToggle(e) {\n    let newMobileState = this.state.mobile;\n    newMobileState.formIsOpen = !newMobileState.formIsOpen;\n\n    this.setState({\n      ...this.state,\n      mobile: newMobileState\n    })\n  }\n\n  // Adding a work object to the experience state array\n  addWork(e) {\n    e.preventDefault();\n\n    this.setState({\n      experience: [\n        ...this.state.experience, this.state.newExperience\n      ],\n      newExperience: {\n        ...this.state.newExperience, id: uniqid()\n      }\n    });\n  }\n\n    // Adding a skill object to the skills state array\n  addSkill(e) {\n    e.preventDefault();\n\n    this.setState({\n      skills: [\n        ...this.state.skills, this.state.newSkill\n      ],\n      newSkill: {\n        ...this.state.newSkill, id: uniqid()\n      }\n    });\n  }\n\n    // Removing a work object from the experience state array\n  removeWork(index) {\n    const list = [...this.state.experience];\n    list.splice(index, 1);\n    \n    this.setState({\n      ...this.state, experience: list\n    });\n  }\n\n  // Removing a skill object from the skills state array\n  removeSkill(index) {\n    const list = [...this.state.skills];\n    list.splice(index, 1);\n    \n    this.setState({\n      ...this.state, skills: list\n    });\n  }\n\n  // Recolouring SVGs (with the \"fill:\" property) on hover\n  handleMouse(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work.isHovered = !work.isHovered;\n        return work;\n      } else {\n        return work;\n      }\n    });\n\n    this.setState({\n      ...this.state, experience: experience\n    });\n  }\n\n    // Recolouring SVGs (with the \"fill:\" property) on hover\n  handleMouseSkills(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill.isHovered = !skill.isHovered;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n\n    this.setState({\n      ...this.state, skills: skills\n    });\n  }\n\n  // Handling edits for input fields that control the experience state\n  handleWorkChange(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work[e.target.name] = e.target.value;\n        return work\n      } else {\n        return work;\n      }\n    });\n\n    this.setState({\n      ...this.state, experience: experience\n    });\n  }\n\n  // Handling edits for input fields that control the skills state\n  handleSkillChange(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill[e.target.name] = e.target.value;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n\n    this.setState({\n      ...this.state, skills: skills\n    });\n  }\n\n    // Handling edits for input fields that control info state\n  handleInfoChange(e) {\n    const newInfo = this.state.info.map((information, i) => {\n      if (information.name === e.target.name) {\n        information.value = e.target.value;\n        return information;\n      } else {\n        return information;\n      }\n    });\n\n    this.setState({\n      ...this.state, info: newInfo\n    });\n  }\n\n  // Changing values of all keys in the state that keep user data, automatically rendering an autofilled CV due to\n  // the fact that the CV takes key-value pairs from the state as values.\n  autoFill(e) {\n    this.setState({\n      ...this.state, \n      info: autofilledState.info,\n      experience: autofilledState.experience,\n      skills: autofilledState.skills\n    });\n  }\n\n  // Save Preview CV in a PDF file\n  printDocument() {\n    const input = document.getElementById('preview');\n    html2canvas(input)\n      .then((canvas) => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF();\n        pdf.addImage(imgData, 'JPEG', 0, 0);\n        // pdf.output('dataurlnewwindow');\n        pdf.save(\"download.pdf\");\n      })\n    ;\n  }\n\n  // App's render function\n  render() {\n    return (\n      <div className={styles['body']}>\n        <div className={styles['App']}>\n          <Form\n            state={this.state}\n            mobile={this.state.mobile}\n            autoFill={this.autoFill}\n            info={this.state.info}\n            experience={this.state.experience} \n            skills={this.state.skills} \n            addWork={this.addWork} \n            removeWork={this.removeWork}\n            handleMouse={this.handleMouse}\n            handleWorkChange={this.handleWorkChange}\n            handleMouseSkills={this.handleMouseSkills}\n            addSkill={this.addSkill}\n            removeSkill={this.removeSkill}\n            handleSkillChange={this.handleSkillChange}\n            handleInfoChange={this.handleInfoChange} />\n          <Preview \n            mobile={this.state.mobile}\n            info={this.state.info}\n            experience={this.state.experience}\n            skills={this.state.skills} />\n        </div>\n        <MobileToggle \n            handleToggle={this.handleToggle}\n            mobile={this.state.mobile} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}