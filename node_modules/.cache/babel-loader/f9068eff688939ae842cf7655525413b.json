{"ast":null,"code":"/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n;\n\n(function (root, factory) {\n  // https://github.com/umdjs/umd/blob/master/returnExports.js\n  if (typeof exports == 'object') {\n    // For Node.js.\n    module.exports = factory(root);\n  } else if (typeof define == 'function' && define.amd) {\n    // For AMD. Register as an anonymous module.\n    define([], factory.bind(root, root));\n  } else {\n    // For browser globals (not exposing the function separately).\n    factory(root);\n  }\n})(typeof global != 'undefined' ? global : this, function (root) {\n  if (root.CSS && root.CSS.escape) {\n    return root.CSS.escape;\n  } // https://drafts.csswg.org/cssom/#serialize-an-identifier\n\n\n  var cssEscape = function (value) {\n    if (arguments.length == 0) {\n      throw new TypeError('`CSS.escape` requires an argument.');\n    }\n\n    var string = String(value);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index); // Note: there’s no need to special-case astral symbols, surrogate\n      // pairs, or lone surrogates.\n      // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\n      // (U+FFFD).\n\n      if (codeUnit == 0x0000) {\n        result += '\\uFFFD';\n        continue;\n      }\n\n      if ( // If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n      // U+007F, […]\n      codeUnit >= 0x0001 && codeUnit <= 0x001F || codeUnit == 0x007F || // If the character is the first character and is in the range [0-9]\n      // (U+0030 to U+0039), […]\n      index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039 || // If the character is the second character and is in the range [0-9]\n      // (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n      index == 1 && codeUnit >= 0x0030 && codeUnit <= 0x0039 && firstCodeUnit == 0x002D) {\n        // https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      }\n\n      if ( // If the character is the first character and is a `-` (U+002D), and\n      // there is no second character, […]\n      index == 0 && length == 1 && codeUnit == 0x002D) {\n        result += '\\\\' + string.charAt(index);\n        continue;\n      } // If the character is not handled by one of the above rules and is\n      // greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n      // is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n      // U+005A), or [a-z] (U+0061 to U+007A), […]\n\n\n      if (codeUnit >= 0x0080 || codeUnit == 0x002D || codeUnit == 0x005F || codeUnit >= 0x0030 && codeUnit <= 0x0039 || codeUnit >= 0x0041 && codeUnit <= 0x005A || codeUnit >= 0x0061 && codeUnit <= 0x007A) {\n        // the character itself\n        result += string.charAt(index);\n        continue;\n      } // Otherwise, the escaped character.\n      // https://drafts.csswg.org/cssom/#escape-a-character\n\n\n      result += '\\\\' + string.charAt(index);\n    }\n\n    return result;\n  };\n\n  if (!root.CSS) {\n    root.CSS = {};\n  }\n\n  root.CSS.escape = cssEscape;\n  return cssEscape;\n});","map":{"version":3,"names":["root","factory","exports","module","define","amd","bind","global","CSS","escape","cssEscape","value","arguments","length","TypeError","string","String","index","codeUnit","result","firstCodeUnit","charCodeAt","toString","charAt"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/css.escape/css.escape.js"],"sourcesContent":["/*! https://mths.be/cssescape v1.5.1 by @mathias | MIT license */\n;(function(root, factory) {\n\t// https://github.com/umdjs/umd/blob/master/returnExports.js\n\tif (typeof exports == 'object') {\n\t\t// For Node.js.\n\t\tmodule.exports = factory(root);\n\t} else if (typeof define == 'function' && define.amd) {\n\t\t// For AMD. Register as an anonymous module.\n\t\tdefine([], factory.bind(root, root));\n\t} else {\n\t\t// For browser globals (not exposing the function separately).\n\t\tfactory(root);\n\t}\n}(typeof global != 'undefined' ? global : this, function(root) {\n\n\tif (root.CSS && root.CSS.escape) {\n\t\treturn root.CSS.escape;\n\t}\n\n\t// https://drafts.csswg.org/cssom/#serialize-an-identifier\n\tvar cssEscape = function(value) {\n\t\tif (arguments.length == 0) {\n\t\t\tthrow new TypeError('`CSS.escape` requires an argument.');\n\t\t}\n\t\tvar string = String(value);\n\t\tvar length = string.length;\n\t\tvar index = -1;\n\t\tvar codeUnit;\n\t\tvar result = '';\n\t\tvar firstCodeUnit = string.charCodeAt(0);\n\t\twhile (++index < length) {\n\t\t\tcodeUnit = string.charCodeAt(index);\n\t\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t\t// pairs, or lone surrogates.\n\n\t\t\t// If the character is NULL (U+0000), then the REPLACEMENT CHARACTER\n\t\t\t// (U+FFFD).\n\t\t\tif (codeUnit == 0x0000) {\n\t\t\t\tresult += '\\uFFFD';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or is\n\t\t\t\t// U+007F, […]\n\t\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) || codeUnit == 0x007F ||\n\t\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039), […]\n\t\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t\t(\n\t\t\t\t\tindex == 1 &&\n\t\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 &&\n\t\t\t\t\tfirstCodeUnit == 0x002D\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character-as-code-point\n\t\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t// If the character is the first character and is a `-` (U+002D), and\n\t\t\t\t// there is no second character, […]\n\t\t\t\tindex == 0 &&\n\t\t\t\tlength == 1 &&\n\t\t\t\tcodeUnit == 0x002D\n\t\t\t) {\n\t\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the character is not handled by one of the above rules and is\n\t\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\t\tif (\n\t\t\t\tcodeUnit >= 0x0080 ||\n\t\t\t\tcodeUnit == 0x002D ||\n\t\t\t\tcodeUnit == 0x005F ||\n\t\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t\t) {\n\t\t\t\t// the character itself\n\t\t\t\tresult += string.charAt(index);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Otherwise, the escaped character.\n\t\t\t// https://drafts.csswg.org/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\n\t\t}\n\t\treturn result;\n\t};\n\n\tif (!root.CSS) {\n\t\troot.CSS = {};\n\t}\n\n\troot.CSS.escape = cssEscape;\n\treturn cssEscape;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}