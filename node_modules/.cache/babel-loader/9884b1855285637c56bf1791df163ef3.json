{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\n\nvar _utils = require(\"./utils\");\n\nfunction toBeEmptyDOMElement(element) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: function message() {\n      return [_this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toBeEmptyDOMElement\"), 'element', ''), '', 'Received:', \"  \".concat(_this.utils.printReceived(element.innerHTML))].join('\\n');\n    }\n  };\n}\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * ℹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\n\n\nfunction isEmptyElement(element) {\n  var nonCommentChildNodes = _toConsumableArray(element.childNodes).filter(function (node) {\n    return node.nodeType !== 8;\n  });\n\n  return nonCommentChildNodes.length === 0;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toBeEmptyDOMElement","_utils","require","element","checkHtmlElement","pass","isEmptyElement","message","utils","matcherHint","isNot","printReceived","innerHTML","join","nonCommentChildNodes","childNodes","filter","node","nodeType","length"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@testing-library/jest-dom/dist/to-be-empty-dom-element.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeEmptyDOMElement = toBeEmptyDOMElement;\n\nvar _utils = require(\"./utils\");\n\nfunction toBeEmptyDOMElement(element) {\n  (0, _utils.checkHtmlElement)(element, toBeEmptyDOMElement, this);\n  return {\n    pass: isEmptyElement(element),\n    message: () => {\n      return [this.utils.matcherHint(`${this.isNot ? '.not' : ''}.toBeEmptyDOMElement`, 'element', ''), '', 'Received:', `  ${this.utils.printReceived(element.innerHTML)}`].join('\\n');\n    }\n  };\n}\n/**\n * Identifies if an element doesn't contain child nodes (excluding comments)\n * ℹ Node.COMMENT_NODE can't be used because of the following issue \n * https://github.com/jsdom/jsdom/issues/2220\n *\n * @param {*} element an HtmlElement or SVGElement\n * @return {*} true if the element only contains comments or none\n */\n\n\nfunction isEmptyElement(element) {\n  const nonCommentChildNodes = [...element.childNodes].filter(node => node.nodeType !== 8);\n  return nonCommentChildNodes.length === 0;\n}"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,mBAAT,CAA6BG,OAA7B,EAAsC;EAAA;;EACpC,CAAC,GAAGF,MAAM,CAACG,gBAAX,EAA6BD,OAA7B,EAAsCH,mBAAtC,EAA2D,IAA3D;EACA,OAAO;IACLK,IAAI,EAAEC,cAAc,CAACH,OAAD,CADf;IAELI,OAAO,EAAE,mBAAM;MACb,OAAO,CAAC,KAAI,CAACC,KAAL,CAAWC,WAAX,WAA0B,KAAI,CAACC,KAAL,GAAa,MAAb,GAAsB,EAAhD,2BAA0E,SAA1E,EAAqF,EAArF,CAAD,EAA2F,EAA3F,EAA+F,WAA/F,cAAiH,KAAI,CAACF,KAAL,CAAWG,aAAX,CAAyBR,OAAO,CAACS,SAAjC,CAAjH,GAAgKC,IAAhK,CAAqK,IAArK,CAAP;IACD;EAJI,CAAP;AAMD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASP,cAAT,CAAwBH,OAAxB,EAAiC;EAC/B,IAAMW,oBAAoB,GAAG,mBAAIX,OAAO,CAACY,UAAZ,EAAwBC,MAAxB,CAA+B,UAAAC,IAAI;IAAA,OAAIA,IAAI,CAACC,QAAL,KAAkB,CAAtB;EAAA,CAAnC,CAA7B;;EACA,OAAOJ,oBAAoB,CAACK,MAArB,KAAgC,CAAvC;AACD"},"metadata":{},"sourceType":"script"}