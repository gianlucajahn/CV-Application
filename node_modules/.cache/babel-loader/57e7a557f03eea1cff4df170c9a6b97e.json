{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _classCallCheck from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Gianluca/Documents/itWork/Projects/cvApps/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import Form from'./containers/form/form.js';import Preview from'./containers/preview/preview.js';import styles from'./App.module.css';import uniqid from\"uniqid\";import autofilledState from'./utils/autofill.js';import MobileToggle from'./components/MobileToggle/MobileToggle.js';import jsPDF from'jspdf';import html2canvas from'html2canvas';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={// State for all of the user's personal and educational information\ninfo:[{name:\"firstName\",value:\"\",id:uniqid()},{name:\"lastName\",value:\"\",id:uniqid()},{name:\"address\",value:\"\",id:uniqid()},{name:\"website\",value:\"\",id:uniqid()},{name:\"email\",value:\"\",id:uniqid()},{name:\"phone\",value:\"\",id:uniqid()},{name:\"bio\",value:\"\",id:uniqid()},{name:\"universityName\",value:\"\",id:uniqid()},{name:\"universityDegree\",value:\"\",id:uniqid()},{name:\"universityDate\",value:\"\",id:uniqid()},{name:\"schoolName\",value:\"\",id:uniqid()},{name:\"schoolDegree\",value:\"\",id:uniqid()},{name:\"schoolDate\",value:\"\",id:uniqid()}],// State Array to hold Objects resembling work experience of the user\nexperience:[{isHovered:false,id:uniqid(),company:\"\",position:\"\",task:\"\",start:\"\",end:\"\"}],// A new Object that's getting added towards the experience state array on every click of the \"add\" button\nnewExperience:{isHovered:false,id:uniqid(),company:\"\",position:\"\",task:\"\",start:\"\",end:\"\"},// State Array to hold Objects resembling skills of the user\nskills:[{isHovered:false,id:uniqid(),skill:\"\"},{isHovered:false,id:uniqid(),skill:\"\"},{isHovered:false,id:uniqid(),skill:\"\"}],// A new Object that's getting added towards the skills state array on every click of the \"add\" button\nnewSkill:{isHovered:false,id:uniqid(),skill:\"\"},// Object to hold a boolean value, determining if the form (or the preview, if formIsOpen: false) is supposed to be rendered in mobile view.\nmobile:{formIsOpen:true}};// Binding \"this\" to the 'App' Component for all of the component's functionality\n_this.addWork=_this.addWork.bind(_assertThisInitialized(_this));_this.removeWork=_this.removeWork.bind(_assertThisInitialized(_this));_this.handleMouse=_this.handleMouse.bind(_assertThisInitialized(_this));_this.handleWorkChange=_this.handleWorkChange.bind(_assertThisInitialized(_this));_this.handleMouseSkills=_this.handleMouseSkills.bind(_assertThisInitialized(_this));_this.addSkill=_this.addSkill.bind(_assertThisInitialized(_this));_this.removeSkill=_this.removeSkill.bind(_assertThisInitialized(_this));_this.handleSkillChange=_this.handleSkillChange.bind(_assertThisInitialized(_this));_this.handleInfoChange=_this.handleInfoChange.bind(_assertThisInitialized(_this));_this.autoFill=_this.autoFill.bind(_assertThisInitialized(_this));_this.handleToggle=_this.handleToggle.bind(_assertThisInitialized(_this));_this.printDocument=_this.printDocument.bind(_assertThisInitialized(_this));return _this;}// Toggling between the \"form\" and \"preview\" in mobile view\n_createClass(App,[{key:\"handleToggle\",value:function handleToggle(e){var newMobileState=this.state.mobile;newMobileState.formIsOpen=!newMobileState.formIsOpen;this.setState(_objectSpread(_objectSpread({},this.state),{},{mobile:newMobileState}));}// Adding a work object to the experience state array\n},{key:\"addWork\",value:function addWork(e){e.preventDefault();this.setState({experience:[].concat(_toConsumableArray(this.state.experience),[this.state.newExperience]),newExperience:_objectSpread(_objectSpread({},this.state.newExperience),{},{id:uniqid()})});}// Adding a skill object to the skills state array\n},{key:\"addSkill\",value:function addSkill(e){e.preventDefault();this.setState({skills:[].concat(_toConsumableArray(this.state.skills),[this.state.newSkill]),newSkill:_objectSpread(_objectSpread({},this.state.newSkill),{},{id:uniqid()})});}// Removing a work object from the experience state array\n},{key:\"removeWork\",value:function removeWork(index){var list=_toConsumableArray(this.state.experience);list.splice(index,1);this.setState(_objectSpread(_objectSpread({},this.state),{},{experience:list}));}// Removing a skill object from the skills state array\n},{key:\"removeSkill\",value:function removeSkill(index){var list=_toConsumableArray(this.state.skills);list.splice(index,1);this.setState(_objectSpread(_objectSpread({},this.state),{},{skills:list}));}// Recolouring SVGs (with the \"fill:\" property) on hover\n},{key:\"handleMouse\",value:function handleMouse(e){var index=this.state.experience.findIndex(function(work){return work.id===e.target.id;});var experience=this.state.experience.map(function(work,i){if(i===index){work.isHovered=!work.isHovered;return work;}else{return work;}});this.setState(_objectSpread(_objectSpread({},this.state),{},{experience:experience}));}// Recolouring SVGs (with the \"fill:\" property) on hover\n},{key:\"handleMouseSkills\",value:function handleMouseSkills(e){var index=this.state.skills.findIndex(function(skill){return skill.id===e.target.id;});var skills=this.state.skills.map(function(skill,i){if(i===index){skill.isHovered=!skill.isHovered;return skill;}else{return skill;}});this.setState(_objectSpread(_objectSpread({},this.state),{},{skills:skills}));}// Handling edits for input fields that control the experience state\n},{key:\"handleWorkChange\",value:function handleWorkChange(e){var index=this.state.experience.findIndex(function(work){return work.id===e.target.id;});var experience=this.state.experience.map(function(work,i){if(i===index){work[e.target.name]=e.target.value;return work;}else{return work;}});this.setState(_objectSpread(_objectSpread({},this.state),{},{experience:experience}));}// Handling edits for input fields that control the skills state\n},{key:\"handleSkillChange\",value:function handleSkillChange(e){var index=this.state.skills.findIndex(function(skill){return skill.id===e.target.id;});var skills=this.state.skills.map(function(skill,i){if(i===index){skill[e.target.name]=e.target.value;return skill;}else{return skill;}});this.setState(_objectSpread(_objectSpread({},this.state),{},{skills:skills}));}// Handling edits for input fields that control info state\n},{key:\"handleInfoChange\",value:function handleInfoChange(e){var newInfo=this.state.info.map(function(information,i){if(information.name===e.target.name){information.value=e.target.value;return information;}else{return information;}});this.setState(_objectSpread(_objectSpread({},this.state),{},{info:newInfo}));}// Changing values of all keys in the state that keep user data, automatically rendering an autofilled CV due to\n// the fact that the CV takes key-value pairs from the state as values.\n},{key:\"autoFill\",value:function autoFill(e){this.setState(_objectSpread(_objectSpread({},this.state),{},{info:autofilledState.info,experience:autofilledState.experience,skills:autofilledState.skills}));}// Save Preview CV in a PDF file\n},{key:\"printDocument\",value:function printDocument(){var input=document.getElementById('preview');html2canvas(input).then(function(canvas){var imgData=canvas.toDataURL('image/png');var pdf=new jsPDF();// Make img fit to PDF proportions\nvar imgProps=pdf.getImageProperties(imgData);var pdfWidth=pdf.internal.pageSize.getWidth();var pdfHeight=imgProps.height*pdfWidth/imgProps.width;pdf.addImage(imgData,'PNG',0,0,pdfWidth,pdfHeight);// Download PDF to user\npdf.save(\"resume.pdf\");});}// App's render function\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:styles['body'],children:[/*#__PURE__*/_jsxs(\"div\",{className:styles['App'],children:[/*#__PURE__*/_jsx(Form,{printDocument:this.printDocument,state:this.state,mobile:this.state.mobile,autoFill:this.autoFill,info:this.state.info,experience:this.state.experience,skills:this.state.skills,addWork:this.addWork,removeWork:this.removeWork,handleMouse:this.handleMouse,handleWorkChange:this.handleWorkChange,handleMouseSkills:this.handleMouseSkills,addSkill:this.addSkill,removeSkill:this.removeSkill,handleSkillChange:this.handleSkillChange,handleInfoChange:this.handleInfoChange}),/*#__PURE__*/_jsx(Preview,{mobile:this.state.mobile,info:this.state.info,experience:this.state.experience,skills:this.state.skills})]}),/*#__PURE__*/_jsx(MobileToggle,{handleToggle:this.handleToggle,mobile:this.state.mobile})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","Form","Preview","styles","uniqid","autofilledState","MobileToggle","jsPDF","html2canvas","App","props","state","info","name","value","id","experience","isHovered","company","position","task","start","end","newExperience","skills","skill","newSkill","mobile","formIsOpen","addWork","bind","removeWork","handleMouse","handleWorkChange","handleMouseSkills","addSkill","removeSkill","handleSkillChange","handleInfoChange","autoFill","handleToggle","printDocument","e","newMobileState","setState","preventDefault","index","list","splice","findIndex","work","target","map","i","newInfo","information","input","document","getElementById","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","Component"],"sources":["C:/Users/Gianluca/Documents/itWork/Projects/cvApps/src/App.js"],"sourcesContent":["import React from 'react';\nimport Form from './containers/form/form.js';\nimport Preview from './containers/preview/preview.js';\nimport styles from './App.module.css';\nimport uniqid from \"uniqid\";\nimport autofilledState from './utils/autofill.js';\nimport MobileToggle from './components/MobileToggle/MobileToggle.js';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n      // State for all of the user's personal and educational information\n      info: [\n        {\n          name: \"firstName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"lastName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"address\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"website\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"email\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"phone\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"bio\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityDegree\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"universityDate\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolName\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolDegree\",\n          value: \"\",\n          id: uniqid()\n        },\n        {\n          name: \"schoolDate\",\n          value: \"\",\n          id: uniqid()\n        }\n      ],\n\n      // State Array to hold Objects resembling work experience of the user\n      experience: [\n        { \n          isHovered: false,\n          id: uniqid(),\n          company: \"\",\n          position: \"\",\n          task: \"\",\n          start: \"\",\n          end: \"\"\n        }\n      ],\n\n      // A new Object that's getting added towards the experience state array on every click of the \"add\" button\n      newExperience: { \n        isHovered: false,\n        id: uniqid(),\n        company: \"\",\n        position: \"\",\n        task: \"\",\n        start: \"\",\n        end: \"\"\n      },\n\n      // State Array to hold Objects resembling skills of the user\n      skills: [\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        },\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        },\n        { \n          isHovered: false,\n          id: uniqid(),\n          skill: \"\"\n        }\n      ],\n\n      // A new Object that's getting added towards the skills state array on every click of the \"add\" button\n      newSkill: {\n        isHovered: false,\n        id: uniqid(),\n        skill: \"\"\n      },\n\n      // Object to hold a boolean value, determining if the form (or the preview, if formIsOpen: false) is supposed to be rendered in mobile view.\n      mobile: {\n        formIsOpen: true\n      }\n    }\n\n    // Binding \"this\" to the 'App' Component for all of the component's functionality\n    this.addWork = this.addWork.bind(this);\n    this.removeWork = this.removeWork.bind(this);\n    this.handleMouse = this.handleMouse.bind(this);\n    this.handleWorkChange = this.handleWorkChange.bind(this);\n    this.handleMouseSkills = this.handleMouseSkills.bind(this);\n    this.addSkill = this.addSkill.bind(this);\n    this.removeSkill = this.removeSkill.bind(this);\n    this.handleSkillChange = this.handleSkillChange.bind(this);\n    this.handleInfoChange = this.handleInfoChange.bind(this);\n    this.autoFill = this.autoFill.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.printDocument = this.printDocument.bind(this);\n  }\n\n  // Toggling between the \"form\" and \"preview\" in mobile view\n  handleToggle(e) {\n    let newMobileState = this.state.mobile;\n    newMobileState.formIsOpen = !newMobileState.formIsOpen;\n\n    this.setState({\n      ...this.state,\n      mobile: newMobileState\n    })\n  }\n\n  // Adding a work object to the experience state array\n  addWork(e) {\n    e.preventDefault();\n\n    this.setState({\n      experience: [\n        ...this.state.experience, this.state.newExperience\n      ],\n      newExperience: {\n        ...this.state.newExperience, id: uniqid()\n      }\n    });\n  }\n\n    // Adding a skill object to the skills state array\n  addSkill(e) {\n    e.preventDefault();\n\n    this.setState({\n      skills: [\n        ...this.state.skills, this.state.newSkill\n      ],\n      newSkill: {\n        ...this.state.newSkill, id: uniqid()\n      }\n    });\n  }\n\n    // Removing a work object from the experience state array\n  removeWork(index) {\n    const list = [...this.state.experience];\n    list.splice(index, 1);\n    \n    this.setState({\n      ...this.state, experience: list\n    });\n  }\n\n  // Removing a skill object from the skills state array\n  removeSkill(index) {\n    const list = [...this.state.skills];\n    list.splice(index, 1);\n    \n    this.setState({\n      ...this.state, skills: list\n    });\n  }\n\n  // Recolouring SVGs (with the \"fill:\" property) on hover\n  handleMouse(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work.isHovered = !work.isHovered;\n        return work;\n      } else {\n        return work;\n      }\n    });\n\n    this.setState({\n      ...this.state, experience: experience\n    });\n  }\n\n    // Recolouring SVGs (with the \"fill:\" property) on hover\n  handleMouseSkills(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill.isHovered = !skill.isHovered;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n\n    this.setState({\n      ...this.state, skills: skills\n    });\n  }\n\n  // Handling edits for input fields that control the experience state\n  handleWorkChange(e) {\n    const index = this.state.experience.findIndex(work => work.id === e.target.id);\n    const experience = this.state.experience.map((work, i) => {\n      if (i === index) {\n        work[e.target.name] = e.target.value;\n        return work\n      } else {\n        return work;\n      }\n    });\n\n    this.setState({\n      ...this.state, experience: experience\n    });\n  }\n\n  // Handling edits for input fields that control the skills state\n  handleSkillChange(e) {\n    const index = this.state.skills.findIndex(skill => skill.id === e.target.id);\n    const skills = this.state.skills.map((skill, i) => {\n      if (i === index) {\n        skill[e.target.name] = e.target.value;\n        return skill;\n      } else {\n        return skill;\n      }\n    });\n\n    this.setState({\n      ...this.state, skills: skills\n    });\n  }\n\n  // Handling edits for input fields that control info state\n  handleInfoChange(e) {\n    const newInfo = this.state.info.map((information, i) => {\n      if (information.name === e.target.name) {\n        information.value = e.target.value;\n        return information;\n      } else {\n        return information;\n      }\n    });\n\n    this.setState({\n      ...this.state, info: newInfo\n    });\n  }\n\n  // Changing values of all keys in the state that keep user data, automatically rendering an autofilled CV due to\n  // the fact that the CV takes key-value pairs from the state as values.\n  autoFill(e) {\n    this.setState({\n      ...this.state, \n      info: autofilledState.info,\n      experience: autofilledState.experience,\n      skills: autofilledState.skills\n    });\n  }\n\n  // Save Preview CV in a PDF file\n  printDocument() {\n    const input = document.getElementById('preview');\n    html2canvas(input)\n      .then((canvas) => {\n        const imgData = canvas.toDataURL('image/png');\n        const pdf = new jsPDF();\n\n        // Make img fit to PDF proportions\n        const imgProps= pdf.getImageProperties(imgData);\n        const pdfWidth = pdf.internal.pageSize.getWidth();\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n        pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n\n        // Download PDF to user\n        pdf.save(\"resume.pdf\");\n      })\n    ;\n  }\n\n  // App's render function\n  render() {\n    return (\n      <div className={styles['body']}>\n        <div className={styles['App']}>\n          <Form\n            printDocument={this.printDocument}\n            state={this.state}\n            mobile={this.state.mobile}\n            autoFill={this.autoFill}\n            info={this.state.info}\n            experience={this.state.experience} \n            skills={this.state.skills} \n            addWork={this.addWork} \n            removeWork={this.removeWork}\n            handleMouse={this.handleMouse}\n            handleWorkChange={this.handleWorkChange}\n            handleMouseSkills={this.handleMouseSkills}\n            addSkill={this.addSkill}\n            removeSkill={this.removeSkill}\n            handleSkillChange={this.handleSkillChange}\n            handleInfoChange={this.handleInfoChange} />\n          <Preview \n            mobile={this.state.mobile}\n            info={this.state.info}\n            experience={this.state.experience}\n            skills={this.state.skills} />\n        </div>\n        <MobileToggle \n            handleToggle={this.handleToggle}\n            mobile={this.state.mobile} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}